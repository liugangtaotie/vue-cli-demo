const { promisify } = require('util')
const clear = require('clear')
const chalk = require('chalk')
const execa = require('execa')
const figlet = promisify(require('figlet'))
const logChalk = (str) => console.info(chalk.green(str))
const download = require('download-git-repo')
const log = require('./log')
const { handleDownload } = require('./download')
const inquirer = require('inquirer')

const PROMPT_LIST = [
  {
    type: 'input',
    message: 'enter your projectName',
    name: 'projectName',
    default: 'test',
  },
  {
    type: 'list',
    message: 'choose download template',
    name: 'templateName',
    choices: ['test-vue'],
  },
]

function entry() {
  inquirer.prompt(PROMPT_LIST).then(async (answer) => {
    handleDownload(answer)
  })
}

module.exports = async (name) => {
  clear()
  const data = await figlet('bs-cli welcome')
  logChalk(data)

  entry()

  // const repo =
  //   'direct:https://github.com/liugangtaotie/vue2-mobile-ssr-code.git#main'

  // const ora = require('ora')

  // const process = ora({
  //   text: 'loading',
  //   prefixText: 'üö¥üèªDownload from template...',
  //   color: 'gray',
  // })

  // process.start()

  // await download(repo, name, { clone: true }, (err) => {
  //   // ‰∏™‰∫∫ÂàÜÊûêÂá∫ÁöÑ‰∏§ÁßçÈîôËØØÊÉÖÂÜµÔºö1 ÂêåÁõÆÂΩïÈ°πÁõÆÂêçÂ∑≤Â≠òÂú® 2 ÂÇ®Â≠òÂ∫ìÂá∫Áé∞ÈóÆÈ¢ò
  //   if (err) return process.fail('È°πÁõÆÂ∑≤Â≠òÂú®ÊàñÂ≠òÂÇ®Â∫ìÈîôËØØÔºÅ')
  //   // ÂàõÂª∫ÊàêÂäü ÊèêÁ§∫
  //   setTimeout(() => {
  //     process.succeed(chalk.green('Ê®°Êùø‰∏ãËΩΩÊàêÂäü'))
  //     console.log(
  //       `
  //       ‚ñÑ‚ñà‚ñà‚ñà‚ñà ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ  ‚ñà‚ñà‚ñì‚ñà‚ñà‚ñà    ‚ñÑ‚ñà‚ñà‚ñà‚ñà     ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ   ‚ñà‚ñà‚ñì     ‚ñà‚ñà‚ñì
  //       ‚ñà‚ñà‚ñí ‚ñÄ‚ñà‚ñí‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå‚ñì‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí ‚ñà‚ñà‚ñí ‚ñÄ‚ñà‚ñí   ‚ñí‚ñà‚ñà‚ñÄ ‚ñÄ‚ñà  ‚ñì‚ñà‚ñà‚ñí    ‚ñì‚ñà‚ñà‚ñí
  //       ‚ñí‚ñà‚ñà‚ñë‚ñÑ‚ñÑ‚ñÑ‚ñë‚ñë‚ñà‚ñà   ‚ñà‚ñå‚ñì‚ñà‚ñà‚ñë ‚ñà‚ñà‚ñì‚ñí‚ñí‚ñà‚ñà‚ñë‚ñÑ‚ñÑ‚ñÑ‚ñë   ‚ñí‚ñì‚ñà    ‚ñÑ ‚ñí‚ñà‚ñà‚ñë    ‚ñí‚ñà‚ñà‚ñí
  //       ‚ñë‚ñì‚ñà  ‚ñà‚ñà‚ñì‚ñë‚ñì‚ñà‚ñÑ   ‚ñå‚ñí‚ñà‚ñà‚ñÑ‚ñà‚ñì‚ñí ‚ñí‚ñë‚ñì‚ñà  ‚ñà‚ñà‚ñì   ‚ñí‚ñì‚ñì‚ñÑ ‚ñÑ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñë    ‚ñë‚ñà‚ñà‚ñë
  //       ‚ñë‚ñí‚ñì‚ñà‚ñà‚ñà‚ñÄ‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí ‚ñë  ‚ñë‚ñë‚ñí‚ñì‚ñà‚ñà‚ñà‚ñÄ‚ñí   ‚ñí ‚ñì‚ñà‚ñà‚ñà‚ñÄ ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñë‚ñà‚ñà‚ñë
  //       ‚ñë‚ñí   ‚ñí  ‚ñí‚ñí‚ñì  ‚ñí ‚ñí‚ñì‚ñí‚ñë ‚ñë  ‚ñë ‚ñë‚ñí   ‚ñí    ‚ñë ‚ñë‚ñí ‚ñí  ‚ñë‚ñë ‚ñí‚ñë‚ñì  ‚ñë‚ñë‚ñì
  //       ‚ñë   ‚ñë  ‚ñë ‚ñí  ‚ñí ‚ñë‚ñí ‚ñë       ‚ñë   ‚ñë      ‚ñë  ‚ñí   ‚ñë ‚ñë ‚ñí  ‚ñë ‚ñí ‚ñë
  //       ‚ñë ‚ñë   ‚ñë  ‚ñë ‚ñë  ‚ñë ‚ñë‚ñë       ‚ñë ‚ñë   ‚ñë    ‚ñë          ‚ñë ‚ñë    ‚ñí ‚ñë
  //           ‚ñë    ‚ñë                   ‚ñë    ‚ñë ‚ñë          ‚ñë  ‚ñë ‚ñë
  //               ‚ñë                          ‚ñë
  //   `
  //     )
  //     log.success(`üéâ  Successfully created project ${name}.`)
  //     log.success('üëâ  Get started with the following commands:\n')
  //     log.bash(`cd ${name}`)
  //     log.bash(`yarn install`)

  //     logChalk('üöÄÂÆâË£Ö‰æùËµñ')

  //     execa.commandSync('npm install', {
  //       cwd: `./${name}`,
  //       stdio: ['inherit', 'inherit', 'inherit'],
  //     })

  //     log.bash(`npm run serve`)
  //   }, 50)
  // })
}
